Задание 1.

#include <iostream>
using namespace std;

class Animal
{
public:
    string name;
    string feature;
    string sound;
    Animal(string name, string feature = "", string sound = "")
    {
        this -> name = name;
        this -> feature = feature;
        this -> sound = sound;
    };
    Animal& get_sound (string sound)
    {
        sound;
    }
    Animal& get_feature(string feature)
    {
        feature;
    }
};


Задание 2.

#include <iostream>
using namespace std;

class Animal
{
public:
    string name;
    string feature;
    string sound;
    Animal(string name, string feature = "", string sound = "")
    {
        this -> name = name;
        this -> feature = feature;
        this -> sound = sound;
    };
    Animal& get_sound (string sound)
    {
        sound;
    }
    Animal& get_feature(string feature)
    {
        feature;
    }

};

class Farm_Animal: public Animal
{
public:
    string resource;
    Farm_Animal(string name, string feature, string sound, string resource): Animal(name, feature, sound)
    {
        this -> resource= resource;
    }
    Farm_Animal& get_resource(string res)
    {
        int find = false;
        for (int i = 0; i < resource.size(); i++)
        {
            if(res == resource[i]) find++;
        }
        if(find) cout << "Got "<< res << " from "<< name << endl;
        else cout<< name << " no has " << res<< endl;
    }
};


Задание 3.

#include <iostream>
using namespace std;

class Animal
{
public:
    string name;
    string feature;
    string sound;
    Animal(string name, string feature = "", string sound = "")
    {
        this -> name = name;
        this -> feature = feature;
        this -> sound = sound;
    };
    Animal& get_sound (string sound)
    {
        sound;
    }
    Animal& get_feature(string feature)
    {
        feature;
    }

};

class Farm_Animal: public Animal
{
public:
    string resource;
    Farm_Animal(string name, string feature, string sound, string resource): Animal(name, feature, sound)
    {
        this -> resource= resource;
    }
    Farm_Animal& get_resource(string res)
    {
        int find = false;
        for (int i = 0; i < resource.size(); i++)
        {
            if(res == resource[i]) find++;
        }
        if(find) cout << "Got "<< res << " from "<< name << endl;
        else cout<< name << " no has " << res<< endl;
    }
};

class Cow: public Farm_Animal
{
public:
    Cow(string name,string feature,string sound,string resource): Farm_Animal(name, feature, sound, resource){

    };
    Cow& get_action(string object)
    {
        cout << name <<' '<< feature<< ' '<< object << endl;
    }
};

class Sheep: public Farm_Animal
{
public:
    Sheep(string name,string feature,string sound, string resource): Farm_Animal(name, feature, sound, resource){

    };
    Sheep& get_action(string object)
    {
        cout << name << ' ' << feature<< ' '<< object << endl;
    }
};

class Chicken: public Farm_Animal
{
public:
    Chicken(string name, string feature, string sound, string resource): Farm_Animal(name, feature, sound, resource){

    };
    Chicken& get_action(string object)
    {
        cout << name<< ' '<< feature<< ' '<< object << endl;
    }
};

class Horse: public Farm_Animal
{
public:
    Horse(string name, string feature, string sound, string resource): Farm_Animal(name, feature, sound, resource){

    };
    Horse& get_action(string object)
    {
        cout << name << ' ' << feature<< ' ' << object << endl;
    }
};
